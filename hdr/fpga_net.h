#ifndef _FPGA_NET_H_
#define _FPGA_NET_H_
/*==================================================================================================

    Module Name:  fpga_ingot.h

    General Description: interface for FPGA net driver

====================================================================================================

====================================================================================================
                                           INCLUDE FILES
==================================================================================================*/

#ifdef __cplusplus
extern "C" {
#endif

/*==================================================================================================
                                              MACROS
==================================================================================================*/
#define FPGA_NET_PACKET_LEN_MIN 16
#define FPGA_NET_PACKET_LEN_MAX (MBUF_SIZE - 32)

/*==================================================================================================
                                               ENUMS
==================================================================================================*/
typedef enum
{
    TX_QUEUE_FPGA_LOOP = 0,
    TX_QUEUE_HIGIG,
    TX_QUEUE_MAX
} tx_queue_t;

typedef enum
{
    GE_0 = 0,
    GE_1,
    GE_2,
    GE_3,
    GE_4,
    GE_5,
    GE_6,
    GE_7,
    GE_8,
    GE_9,
    GE_10,
    GE_11,
    GE_12,
    GE_13,
    GE_14,
    GE_15,
    XE_0,
    XE_1,
    XE_2,
    XE_3,
    GE_16, /* for WTB1 */
    GE_24, /* for WTB2 */
    /* must be equal to RX_PORT_NUM */
    FPGA_PORT_MAX
} fpga_net_port_t;

/*==================================================================================================
                                   STRUCTURES AND OTHER TYPEDEFS
==================================================================================================*/

/*==================================================================================================
                                   GLOBAL VARIABLE DECLARATIONS
==================================================================================================*/

/*==================================================================================================
                                        FUNCTION PROTOTYPES
==================================================================================================*/

/*=============================================================================================*//**
@brief init fpga net driver.

@return 0 if success
*//*==============================================================================================*/
int fpga_net_init();

/*=============================================================================================*//**
@brief config fpga net driver

@param[in] queue - which FPGA tx queue to use
                                                                                                  *
@return 0 if success
*//*==============================================================================================*/
int fpga_net_config(tx_queue_t queue);

/*=============================================================================================*//**
@brief receive a packet from specified port.

@param[in] port - on which port to receive packet
@param[in] buf  - the buffer to receive packet
@param[in] len  - packet buffer length

@return length we have successfully received
*//*==============================================================================================*/
int fpga_net_rx(fpga_net_port_t port, void* buf, size_t len);

/*=============================================================================================*//**
@brief transmit a packet over a port.

@param[in] port - which port to send packet
@param[in] buf  - the buffer contains the packet
@param[in] len  - packet buffer length

@return 0 if success
*//*==============================================================================================*/
int fpga_net_tx(fpga_net_port_t port, const void* buf, size_t len);

#ifdef __cplusplus
}
#endif

/** @} */
/** @} */

#endif /* _FPGA_NET_H_  */

